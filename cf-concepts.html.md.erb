---
title: How TAS for VMs and Tanzu Operations Manager services work
owner: Services
---
There are many ways to integrate services with <%= vars.app_runtime_full %> and <%= vars.platform_name %>. The right way for each
service depends on what
the service does, and how your customer applications consume it. To determine the best way to integrate your
service, you need a good understanding of <%= vars.app_runtime_abbr %> concepts such as applications, containers, services,
brokers, and buildpacks.

Here is a collection of links to documentation for the most relevant
concepts.

For a general overview of <%= vars.app_runtime_abbr %>, and the various ways to interact with it,
use the following links:

- [TAS for VMs Overview](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/concepts-overview.html) provides high-level descriptions of internal functions performed by different <%= vars.app_runtime_abbr %> components.
- [Cloud Foundry Command Line Interface (cf CLI)](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/cf-cli-index.html) links to topics that explain how to direct <%= vars.app_runtime_abbr %> deployment from your local command line.
- [Tanzu Operations Manager](https://docs.vmware.com/en/VMware-Tanzu-Operations-Manager/2.10/vmware-tanzu-ops-manager/pcf-interface.html) describes Tanzu Operations Manager and Installation Dashboard interfaces, where cloud operators view, install, configure, and deploy service tiles.
- [Apps Manager](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/console-index.html) describes the Apps Manager interface, where app developers create and configure service instances and bind them to their apps.

## <a id="applications"></a> Applications

Cloud Foundry is primarily a cloud-native application platform. To understand how to integrate your
services with Cloud Foundry, you must understand how your customers are using the platform to
develop, deploy, and operate their applications.

- [Pushing apps to TAS for VMs](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/toc-pushing-apps-tas-index.html) explains how to push an app to run on <%= vars.platform_name %> and enable it to use services.
- [Logging and metrics in Cloud Foundry](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/data-sources.html) describes how <%= vars.app_runtime_abbr %> aggregates and streams logs and metrics from the apps it hosts and from internal system components.

## <a id="services"></a> Services

Most value-add integrations are done by exposing your software to your applications as services. To understand the service
concepts, and what a service integration looks like, refer to the following documentation:

- [Services](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/services-index.html) explains how developers provision and use existing services in their apps.
- [Cloud Foundry service brokers and <%= vars.platform_name %> Tiles](https://docs.vmware.com/en/On-Demand-Services-SDK-for-VMware-Tanzu/0.45/on-demand-services-sdk/GUID-about.html#cf-broker) briefly describes the two main elements of <%= vars.platform_name %> service integration: the service broker API, which connects the service to <%= vars.app_runtime_abbr %> internally by taking commands from the Cloud Controller; and the tile, a packaged interface that cloud operators use to install and configure a service within <%= vars.platform_name %>.
- [Custom Services](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/docs-services-index.html) explains how service authors package their service as a [Managed Service](./managed.html) that is available for use by operators and developers, and which runs locally on <%= vars.app_runtime_abbr %> rather than running remotely.

## <a id="buildpacks"></a> Buildpacks

When application code is deployed to Cloud Foundry, a language-specific buildpack processes it. Language buildpacks provide a
convenient integration hook for any service that needs to inspect or embellish application code.
Supplying buildpacks also provides a language-agnostic way to inject your code into the application container image.

- [Staging your apps in Cloud Foundry](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/how-applications-are-staged.html) explains how <%= vars.app_runtime_abbr %> packages and deploys apps in containers with buildpacks so that they can run on multiple VMs interchangeably.
- [Language Buildpacks](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/toc-buildpacks-index.html) describes the language-specific buildpacks support <%= vars.app_runtime_abbr %> apps.
- [Custom Buildpacks](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/custom.html) describes how to use supply buildpacks to add dependencies or code without having to change (multiple) language-specific buildpacks.

## <a id="agents"></a> Embedded Agents

Some integrations can inject code into the application container.
VMware refers to these injected components as "container-embedded agents."
Buildpacks provide a mechanism to inject components into the application container image, and the `.profile.d` directory provides a way to start agents before or alongside the customer application.
See [Resources for deploying your buildpacks](./buildpacks.html#other).

Also see:

- [Agent Injection with a supply buildpack](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/custom.html)
- [Using .profile](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/deploy-apps-deploy-app.html#profile)


## <a id="nozzles"></a> Nozzles

Loggregator, the VMware Tanzu Application Service logging system, has a feature named **Firehose**. The Firehose includes the
combined stream of logs from all apps, plus metrics data components used by operators and administrators.

A nozzle takes this data and forwards it to an external logging and/or metrics solution.

See:

- [Loggregrator documentation](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/<%= vars.current_major_tas_version %>/tas-for-vms/toc-loggregator-index.html)
- [Loggregator system](https://github.com/cloudfoundry/loggregator)

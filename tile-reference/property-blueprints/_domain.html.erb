This holds a string value that is a valid domain (e.g. <code>example.com</code> or <code>x.example.com:80/a/b</code>).

<table class="nice">
  <tr>
    <td>credential</td>
    <td>no</td>
  </tr>
  <tr>
    <td>supports auto-generation</td>
    <td>no</td>
  </tr>
  <tr>
    <td>supports operator configuration</td>
    <td>yes</td>
  </tr>
</table>

#### Property blueprint attributes

<table class="nice">
  <tr>
    <td> default </td>
    <td>
      Optional. Specifies a default value. <br>When provided, it must be set to a value that is valid for this type.
      <br>It cannot be used when the property also has <code>optional: true</code>.
    </td>
  </tr>
</table>

#### Accessors

<table class="nice">
  <tr>
    <td>value</td>
    <td>Returns the domain as a string or null.</td>
  </tr>
  <tr>
    <td>value_present?</td>
    <td>Returns <code>true</code> only if the value is a non-empty string.</td>
  </tr>
</table>

#### Example

```yaml
property_blueprints:
  - name: example_domain
    type: domain
    configurable: true

form_types:
  - name: example_form
    label: 'Example form'
    description: 'An example form'
    property_inputs:
      - reference: .properties.example_domain
        label: 'Example domain'
        description: 'This is an example'

job_types:
- name: example-job
  resource_label: An Example Job
  <<: *job_type_boilerplate
  templates:
    - name: login_banner
      release: os-conf
      manifest: |
        login_banner:
          text: Hello, user. I see your favorite domain is (( .properties.example_domain.value )).
```

<img src="img/example-domain-tile.png" alt="Example Product with Domain">

<br><hr>

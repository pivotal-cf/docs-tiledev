### <a id="email"></a> email

This ensures the string value is formatted as an email address.

<table class="nice">
  <tr>
    <td>credential</td>
    <td>no</td>
  </tr>
  <tr>
    <td>supports auto-generation</td>
    <td>no</td>
  </tr>
  <tr>
    <td>supports operator configuration</td>
    <td>yes</td>
  </tr>
</table>

#### Property Blueprint Attributes

<table class="nice">
  <tr>
    <td> default </td>
    <td>
      Optional. Specifies a default value. When provided, must be set to a value which is valid for this type.
      Cannot be used when the property also has <code>optional: true</code>.
    </td>
  </tr>
</table>

#### Accessors

<table class="nice">
  <tr>
    <td>value</td>
    <td>Returns a string or null.</td>
  </tr>
  <tr>
    <td>value_present?</td>
    <td>Returns true if value is a non-empty string.</td>
  </tr>
</table>

#### Example

```yaml
property_blueprints:
- name: example_email
  type: email
  configurable: true

form_types:
- name: example_dropdown
  label: 'Example form'
  description: 'An example form'
  property_inputs:
  - reference: .properties.example_email
    label: User email
    description: 'What is your email?'

job_types:
- name: example-job
  resource_label: An Example Job
  &lt;&lt;: *job_type_boilerplate
  templates:
  - name: login_banner
    release: os-conf
    manifest: |
      login_banner:
        text: Hello, user. Your email is (( .properties.example_email.value )).
```

<img src="img/example-email-tile.png" alt="Example Product with Email">

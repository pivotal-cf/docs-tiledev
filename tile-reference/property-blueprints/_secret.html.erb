<%= partial 'tile-reference/property-blueprint', locals: {
    description: 'This holds a single string value.',
    credential: true,
    auto_generatable: true,
    operator_configurable: true,
    allows_default_to_be_specified: false,
    value_accessor_description: 'Returns the secret as a string or null.',
    value_present_accessor_description: 'Returns true if value is a non-empty string.',
    additional_property_blueprint_attributes: [
      {
        name: 'constraints.must_match_regex',
        description: <<~DESC
          A regular expression that the user input must match. Create a validator that runs on the form save event.
          If the user input does not match the <code>must_match_regex</code> constraint, the form displays the specified <code>error_message</code>.
          Multiple <code>must_match_regex</code> constraints for a single property blueprint are evaluated in the order listed.
          See the example below for example on how to use.
          DESC
      }
    ],

    additional_accessors: [],
    examples: [
      {
        name: 'Example',
        image: {
          name: 'Example Product with Secret',
          path: 'img/example-secret-tile.png'
        },
        metadata: <<~METADATA,
          property_blueprints:
            - name: example_secret
              type: secret
              configurable: true
              constraints:
                - must_match_regex: '^[a-zA-Z]{20,}$'
                  error_message: 'This password must be at least 20 letters'

          form_types:
            - name: example_secret
              label: 'Example form'
              description: 'An example form'
              property_inputs:
                - reference: .properties.example_secret
                  label: Example Secret
                  description: 'Configure a property of type secret'
                  display_type: text_area

          job_types:
          - name: example-job
            resource_label: An Example Job
            <<: *job_type_boilerplate
            templates:
              - name: login_banner
                release: os-conf
                manifest: |
                  login_banner:
                    text: Shh, today's secret is (( .properties.example_secret.value )).
        METADATA
      },
      {
        name: 'Adding an additional key to the property input for a secret will allow you to use a multi-line credential.',
        image: {
          name: 'Example Product with Secret',
          path: 'img/example-secret-text-area-tile.png'
        },
        metadata: <<~METADATA,
          form_types:
            - name: example_secret
              label: 'Example form'
              description: 'An example form'
              property_inputs:
                - reference: .properties.example_secret
                  label: Example Secret
                  description: 'Configure a property of type secret'
                  display_type: text_area
        METADATA
      }
    ]
} %>

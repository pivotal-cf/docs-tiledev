<%= description %>

<table class="nice">
  <tr>
    <td>credential</td>
    <td><%= credential ? 'yes' : 'no' %></td>
  </tr>
  <tr>
    <td>supports auto-generation</td>
    <td><%= auto_generatable ? 'yes' : 'no' %></td>
  </tr>
  <tr>
    <td>supports operator configuration</td>
    <td><%= operator_configurable ? 'yes' : 'no' %></td>
  </tr>
</table>

<% if additional_property_blueprint_attributes.present? || allows_default_to_be_specified %>

#### Property blueprint attributes

<table class="nice">
  <% if allows_default_to_be_specified %>
    <tr>
      <td> default </td>
      <td>
        Optional. Specifies a default value. When provided, must be set to a value which is valid for this type.
        Cannot be used when the property also has <code>optional: true</code>.
        <% if defined?(additional_default_description) %>
          <br/>
          <br/>
          <%= additional_default_description %>
        <% end %>
      </td>
    </tr>
  <% end %>

  <% additional_property_blueprint_attributes.each do |property| %>
    <tr>
      <td> <%= property[:name] %> </td>
      <td> <%= property[:description] %> </td>
    </tr>
  <% end %>
</table>

<% if defined?(constraints) %>
#### Supported Constraints

<table class="nice">
  <% constraints.each do |constraint| %>
    <tr>
      <td> <%= constraint[:name] %> </td>
      <td> <%= constraint[:description] %> </td>
    </tr>
  <% end %>
</table>
<% end %>

<% end %>

#### Accessors

<table class="nice">
  <% additional_accessors.each do |accessor| %>
    <tr>
      <td><%= accessor[:name] %></td>
      <td><%= accessor[:description] %></td>
    </tr>
  <% end %>

  <% if value_accessor_description %>
    <tr>
      <td>value</td>
      <td><%= value_accessor_description %></td>
    </tr>
  <% end %>

  <% if value_present_accessor_description %>
    <tr>
      <td>value_present?</td>
      <td><%= value_present_accessor_description %></td>
    </tr>
  <% end %>

</table>

<% examples.each do |example| %>
#### <%= example[:name] %>

```
<%= example[:metadata] %>
```

<% if example[:image] %>
![<%= example[:image][:name] %>](<%= example[:image][:path] %>)
<% end %>

<% if example[:manifest_snippet].present? %>
##### Resulting manifest snippet
```
<%= example[:manifest_snippet] %>
```
<% end %>
<% end %>
